// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-howto-api/internal/repo (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	howto "github.com/ozoncp/ocp-howto-api/internal/howto"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AddHowto mocks base method.
func (m *MockRepo) AddHowto(arg0 howto.Howto) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddHowto", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddHowto indicates an expected call of AddHowto.
func (mr *MockRepoMockRecorder) AddHowto(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddHowto", reflect.TypeOf((*MockRepo)(nil).AddHowto), arg0)
}
